services:
  postgres:
    image: postgres:15-alpine
    container_name: schedulepro-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: schedulepro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    container_name: schedulepro-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    environment:
      MH_STORAGE: memory

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: schedulepro-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - CALENDAR_ENCRYPTION_KEY=${CALENDAR_ENCRYPTION_KEY}
      - API_PORT=3001
      - API_URL=http://localhost:3001
      - FRONTEND_URL=http://localhost:3000
      # Email Configuration
      - EMAIL_PROVIDER=${EMAIL_PROVIDER:-SENDGRID}
      - SMTP_FROM=${SMTP_FROM:-noreply@schedulepro.com}
      # SendGrid Configuration
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL:-noreply@schedulepro.com}
      - SENDGRID_FROM_NAME=${SENDGRID_FROM_NAME:-SchedulePro}
      # ZeptoMail Configuration
      - ZEPTO_API_KEY=${ZEPTO_API_KEY:-}
      - ZEPTO_API_URL=${ZEPTO_API_URL:-https://api.zeptomail.in/v1.1/email}
      - ZEPTO_FROM_EMAIL=${ZEPTO_FROM_EMAIL:-noreply@schedulepro.com}
      - ZEPTO_FROM_NAME=${ZEPTO_FROM_NAME:-SchedulePro}
      # OAuth Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID:-}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET:-}
      - MICROSOFT_TENANT_ID=${MICROSOFT_TENANT_ID:-}
      # Encryption Keys (32+ characters)
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-character-encryption-key}
      - CALENDAR_ENCRYPTION_KEY=${CALENDAR_ENCRYPTION_KEY:-calendar-encryption-key-32-char!}
      # Rate Limiting
      - THROTTLE_TTL=60
      - THROTTLE_LIMIT=60
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: schedulepro-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
